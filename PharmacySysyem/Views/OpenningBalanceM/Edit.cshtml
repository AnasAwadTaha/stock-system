@using System.Web.Script.Serialization;
@model PharmacySysyem.Models.OpenningBalanceM
<div class="panel-heading">
    <div class="modal-content " style=" background-color:rgba(255,255,255,0.40)">
        <h style="color:rgb(0, 0, 0);font-size:40px;margin-left:200px; font-weight:bold">Edit Openning Balance To Item NO:@Model.ItemCardMasterID</h>
    </div>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="modal-content " style=" background-color:rgba(255,255,255,0.40)">
            <div class="modal-body" style="max-height: calc(100vh - 200px); overflow-x:hidden;
    overflow-y: scroll;">
                @Html.HiddenFor(model => model.ID, new { @id = "openningBaID" })
                <div class="row">
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.ItemCardMasterID, "Item Name", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownList("ItemCardMasterID", null, htmlAttributes: new { @id = "ItemID", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ItemCardMasterID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @id = "Date", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row" style="margin-left:5px;">
                    <div class="row">
                        <div class="col-md-2"><label>Stock</label></div>
                        <div class="col-md-2"><label>Unit</label></div>
                        <div class="col-md-2"><label>Expir Date</label></div>
                        <div class="col-md-1"><label>Patch</label></div>
                        <div class="col-md-1"><label>Qty</label></div>
                        <div class="col-md-1"></div>
                    </div>
                    <div class="row">
                        <div class="col-md-2">@Html.DropDownList("StockID", null, new { @id = "StockID", @class = "form-control" })</div>
                        <div class="col-md-2">@Html.DropDownList("UnitID", null, new { @id = "UnitID", @class = "form-control" })</div>
                        <div class="col-md-2"><input class=form-control type="date"  id="ExpirDate" /></div>
                        <div class="col-md-1"><input class=form-control type="text" id="Patch" /></div>
                        <div class="col-md-1"><input class=form-control type="text" id="Qty" /></div>
                        <div class="col-md-1">
                            <span class="pull-right"><a id="btnAdd" class="btn btn-primary glyphicon glyphicon-arrow-down"></a></span>
                        </div>
                    </div>
                </div>
                <table id="tblItemDetalis" class="table">
                    @{
                        var D = ViewBag.Detalis;
                        
                        <tbody>
                            @foreach (var item in D)
                            {
                                <tr style="background-color:white">
                                    <td hidden>@item.stockID</td>
                                    <td>@item.Stocks.StockName</td>
                                    <td hidden>@item.UnitID</td>
                                    <td>@item.Units.UnitName</td>
                                    <td>@item.ExpertDate</td>
                                    <td>@item.PatchID</td>
                                    <td>@item.Qty</td>
                                    <td><a data-itemId="0" href="#" class="deleteItem">Remove</a></td>
                                </tr>
                            }
                        </tbody>

                    }
                </table>
                <div class="row col-md-offset-1">
                    <div class="col-md-2 pull-right">
                        <input type="button" value="Edit" id="btnEdit" class="btn btn-default" />
                    </div>
                    <div class="col-md-2 pull-left">
                        @Html.ActionLink("Back to List", "Index")
                    </div>
                </div>
            </div>
        </div>
    </div>
                        }

<script src="~/Content/Ajaxfile/jquery.min.js"></script>
@*<script src="~/Content/Ajaxfile/json2.min.cache"></script>*@


<script type="text/javascript">
    clearItem();
    //Add Multiple rows.
    $("#btnAdd").click(function (e) {
        e.preventDefault();
        if ($.trim($("#ItemID").val()) == "" || $.trim($("#Date").val()) == "" || $.trim($("#StockID").val()) == "" || $.trim($("#UnitID").val()) == "" || $.trim($("#ExpirDate").val()) == "" || $.trim($("#Qty").val()) == "") {
            alert("Plz fill the item details!!");
            return;
        }
        else
       // declar var to
        var StockID = $("#StockID").val(),
        StockName = $("#StockID option:selected").text();
        UnitID = $("#UnitID").val(),
        UnitName = $("#UnitID option:selected").text();
        ExpirDate = $("#ExpirDate").val(),
        Patch = $("#Patch").val(),
        Qty = $("#Qty").val(),
        detailsTableBody = $("#tblItemDetalis tbody");
        //add detailsTableBody
        var Detalis = '<tr><td>' + StockID + '</td><td>' + StockName + '</td><td>' + UnitID + '</td><td>' + UnitName + '</td><td>' + ExpirDate + '</td><td>' + Patch + '</td><td>' + Qty + '</td><td><a data-itemId="0" href="#" class="deleteItem">Remove</a></td></tr>';
        detailsTableBody.append(Detalis);
        clearItem();
        $('tbody tr td:nth-child(1)').hide(0);
        $('tbody tr td:nth-child(3)').hide(0);
    });
    //Clear Item
    function clearItem() {
        $("#ExpirDate").val();
        $("#Patch").val(0);
        $("#Qty").val(0);
    }
    // After Add A New Order In The List, If You Want, You Can Remove It.
    $(document).on('click', 'a.deleteItem', function (e) {
        e.preventDefault();
        var $self = $(this);
        if ($(this).attr('data-itemId') == "0") {
            $(this).parents('tr').css("background-color", "#ff6347").fadeOut(800, function () {
                $(this).remove();
            });
        }
    });
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $("body").on("click", "#btnEdit", function () {
            //Loop through the Table rows and build a JSON array.
            var ItemDetails = new Array();
            $("#tblItemDetalis TBODY TR").each(function () {
                var row = $(this);
                var item = {};
                //item.ItemCardDetalisID = row.find("TD").eq(0).html();
                item.StockID = row.find("TD").eq(0).html();
                item.UnitID = row.find("TD").eq(2).html();
                item.ExpertDate = row.find("TD").eq(4).html();
                item.PatchID = row.find("TD").eq(5).html();
                item.Qty = row.find("TD").eq(6).html();
                ItemDetails.push(item);
            });
            //
            var data = JSON.stringify({
                ID: $("#openningBaID").val(),
                ItemCardMasterID: $("#ItemID").val(),
                Date: $("#Date").val(),
                DetalisOJ : ItemDetails
            });
            //Send the JSON array to Controller using AJAX.
            $.ajax({
                type: "POST",
                url: "/OpenningBalanceM/Edit",
                data: data,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    alert(result);
                    window.location.href = "/OpenningBalanceM/Index";
                },
                error: function () {
                    alert("Error!")
                }
            });
        });
    </script>

}
